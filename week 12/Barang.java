/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Penjualan;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ReizaDwitama
 */
public class Barang extends javax.swing.JFrame {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1/db_toko";
    static final String USER = "root";
    static final String PASS = "";

    static Connection conn;
    static Statement stmt;
    static ResultSet rs;
    
    String selectedKodeBarang;
    int state = 0;

    /**
     * Creates new form Barang
     */
    public Barang() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        kodeTxt = new javax.swing.JTextField();
        namaTxt = new javax.swing.JTextField();
        satuanTxt = new javax.swing.JTextField();
        stokTxt = new javax.swing.JTextField();
        stokMinTxt = new javax.swing.JTextField();
        insertBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Kode Barang");

        jLabel2.setText("Nama Barang");

        jLabel3.setText("Satuan");

        jLabel4.setText("Stok Barang");

        jLabel5.setText("Stok Minimum");

        kodeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeTxtActionPerformed(evt);
            }
        });

        namaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaTxtActionPerformed(evt);
            }
        });

        satuanTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                satuanTxtActionPerformed(evt);
            }
        });

        stokTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stokTxtActionPerformed(evt);
            }
        });

        stokMinTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stokMinTxtActionPerformed(evt);
            }
        });

        insertBtn.setText("Insert");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.setEnabled(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.setEnabled(false);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableData);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(insertBtn)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateBtn)
                    .addComponent(clearBtn)
                    .addComponent(stokMinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stokTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(satuanTxt)
                                .addComponent(namaTxt)
                                .addComponent(kodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(namaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(satuanTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stokTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(stokMinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertBtn)
                    .addComponent(clearBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn))
                .addGap(76, 196, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kodeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeTxtActionPerformed

    private void namaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaTxtActionPerformed

    private void satuanTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_satuanTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_satuanTxtActionPerformed

    private void stokTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stokTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stokTxtActionPerformed

    private void stokMinTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stokMinTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stokMinTxtActionPerformed

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        // TODO add your handling code here:
        String kode = kodeTxt.getText().trim();
        String nama = namaTxt.getText();
        String satuan = satuanTxt.getText();
        int stok = Integer.parseInt(stokTxt.getText().trim());
        int stok_min = Integer.parseInt(stokMinTxt.getText().trim());
        insert(kode, nama, satuan, stok, stok_min);
        clear();
        showtable();
    }//GEN-LAST:event_insertBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        clear();
        
    }//GEN-LAST:event_clearBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        
//        selectedKodeBarang = kodeChangeTxt.getText().trim();
//        showKode(selectedKodeBarang);
        String kode = kodeTxt.getText().trim();
        String nama = namaTxt.getText();
        String satuan = satuanTxt.getText();
        int stok = Integer.parseInt(stokTxt.getText().trim());
        int stok_min = Integer.parseInt(stokMinTxt.getText().trim());
        update(kode, nama, satuan, stok, stok_min, selectedKodeBarang);
        clear();
        showtable();
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        delete(selectedKodeBarang);
        clear();
        showtable();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        showtable();
    }//GEN-LAST:event_formWindowOpened

    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
        // TODO add your handling code here:
        insertBtn.setEnabled(false);
        updateBtn.setEnabled(true);
        deleteBtn.setEnabled(true);
        getData();
        
        
    }//GEN-LAST:event_tableDataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        connect();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Barang().setVisible(true);
            }
        });
    }
    
    public void getData(){
        int index = tableData.getSelectedRow();
        selectedKodeBarang = String.valueOf(tableData.getValueAt(index, 1));
        kodeTxt.setText(String.valueOf(tableData.getValueAt(index, 1)));
        namaTxt.setText(String.valueOf(tableData.getValueAt(index, 2)));
        satuanTxt.setText(String.valueOf(tableData.getValueAt(index, 3)));
        stokTxt.setText(String.valueOf(tableData.getValueAt(index, 4)));
        stokMinTxt.setText(String.valueOf(tableData.getValueAt(index, 5)));
    }
    
    public void clear(){
        kodeTxt.setText("");
        namaTxt.setText("");
        satuanTxt.setText("");
        stokTxt.setText("");
        stokMinTxt.setText("");
        insertBtn.setEnabled(true);
        deleteBtn.setEnabled(false);
        updateBtn.setEnabled(false);
    }
    
    public static void connect(){
        try{
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL,USER,PASS);
        } catch(Exception e){
            System.out.println("Tidak dapat melakukan koneksi");
            e.printStackTrace();
        }
    }

    public static void delete(String kd_brg){
        try {
            connect();
            stmt = conn.createStatement();
            
            rs = stmt.executeQuery("SELECT * FROM Barang WHERE kd_brg=\'"+kd_brg+"\'");

            if(rs.next()){
                String sql = "DELETE FROM Barang WHERE kd_brg=?";
                PreparedStatement ps = conn.prepareStatement(sql);

                ps.setString(1,kd_brg);
                ps.execute();
                JOptionPane.showMessageDialog(null, "Data dengan kode barang "+kd_brg+" berhasil dihapus");
            } else {
                JOptionPane.showMessageDialog(null, "Data dengan kode barang "+kd_brg+" tidak ada!");
            }
            stmt.close();
            conn.close();
        } catch (Exception e){
            e.printStackTrace();
        }
    }
//    public void show(){
//        try{
//            connect();
//            stmt = conn.createStatement();
//            rs = stmt.executeQuery("SELECT * FROM barang");
//            String kd_brg,nm_brg, satuan;
//            int stok_brg, stok_min;
//            while(rs.next()){
//                kd_brg = rs.getString("kd_brg");
//                nm_brg = rs.getString("nm_brg");
//                satuan = rs.getString("satuan");
//                stok_brg = rs.getInt("stok_brg");
//                stok_min = rs.getInt("stok_min");
//                barangList.add(new Barang(kd_brg,nm_brg,satuan,stok_brg,stok_min));
//            }
//        }catch(Exception e){
//            e.printStackTrace();
//        }
//    }
    
        public void showKode(String kode_brg){
        try{
            connect();
            stmt = conn.createStatement();
            String sql = "SELECT * FROM Barang WHERE kd_brg=\'"+kode_brg+"\'";
            rs = stmt.executeQuery(sql);
            String kd_brg,nm_brg, satuan;
            int stok_brg, stok_min;
            
            if(rs.next()){                
                kd_brg = rs.getString("kd_brg");
                nm_brg = rs.getString("nm_brg");
                satuan = rs.getString("satuan");
                stok_brg = rs.getInt("stok_brg");
                stok_min = rs.getInt("stok_min");

                kodeTxt.setText(kd_brg);
                namaTxt.setText(nm_brg);
                satuanTxt.setText(satuan);
                stokTxt.setText(String.valueOf(stok_brg));
                stokMinTxt.setText(String.valueOf(stok_min));
                state = 1;
                
                insertBtn.setText("Confirm");
            } else{
                state = 0;
                selectedKodeBarang = null;
                JOptionPane.showMessageDialog(null,"Data barang dengan kode barang "+kode_brg+" tidak ada!!");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    public static void insert(String kode_brg, String nm_brg, String satuan, int stok, int stok_min){
        try{
            connect();
            stmt = conn.createStatement();

            String sql = "INSERT INTO Barang (kd_brg, nm_brg, satuan, stok_brg, stok_min) VALUES (?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);

            ps.setString(1,kode_brg);
            ps.setString(2,nm_brg);
            ps.setString(3,satuan);
            ps.setInt(4,stok);
            ps.setInt(5,stok_min);

            ps.execute();

            stmt.close();
            conn.close();

            JOptionPane.showMessageDialog(null, "Berhasil menyimpan data barang");
            
        }catch(SQLIntegrityConstraintViolationException e){
            JOptionPane.showMessageDialog(null, "Kode barang "+kode_brg+" sudah ada!!");
        }
        catch(SQLException b){
            b.printStackTrace();
        }
    }

    public static void update(String kode_brg, String nm_brg, String satuan, int stok, int stok_min, String selectedBarang){
        try{
            connect();
            stmt = conn.createStatement();

            String sql = "UPDATE Barang SET kd_brg=?, nm_brg=?, satuan=?, stok_brg=?, stok_min=? WHERE kd_brg=?";
            PreparedStatement ps = conn.prepareStatement(sql);

            ps.setString(1,kode_brg);
            ps.setString(2,nm_brg);
            ps.setString(3,satuan);
            ps.setInt(4,stok);
            ps.setInt(5,stok_min);
            ps.setString(6,selectedBarang);

            ps.execute();

            stmt.close();
            conn.close();
            
            JOptionPane.showMessageDialog(null,"Data berhasil di-update");

        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
     public void showtable(){
        try{
            Class.forName(JDBC_DRIVER);	   
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("No");
            model.addColumn("Kode Barang");
            model.addColumn("Nama Barang");
            model.addColumn("Satuan");
            model.addColumn("Stok");
            model.addColumn("Stok Barang");
 
            stmt = conn.createStatement();
            String sql = "SELECT * FROM Barang";
            int i = 1;
            rs = stmt.executeQuery(sql);
            while(rs.next()) {
            	model.addRow(new Object[] {
                        i,
            		rs.getString("kd_brg"),
            		rs.getString("nm_brg"),
            		rs.getString("satuan"),
            		rs.getInt("stok_brg"),
                        rs.getInt("stok_min")
            	});
            	i++;
            }
            rs.close();
            conn.close();
            stmt.close();
            
            tableData.setModel(model);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField kodeTxt;
    private javax.swing.JTextField namaTxt;
    private javax.swing.JTextField satuanTxt;
    private javax.swing.JTextField stokMinTxt;
    private javax.swing.JTextField stokTxt;
    private javax.swing.JTable tableData;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
